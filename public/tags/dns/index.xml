<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>dns on 虫子樱桃</title>
    <link>https://czyt.tech/tags/dns/</link>
    <description>Recent content in dns on 虫子樱桃</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 22 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://czyt.tech/tags/dns/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>golang http客户端使用自定义dns</title>
      <link>https://czyt.tech/post/golang-http-use-custom-dns/</link>
      <pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://czyt.tech/post/golang-http-use-custom-dns/</guid>
      <description>摘自互联网 原文
package main import ( &amp;#34;context&amp;#34; &amp;#34;io/ioutil&amp;#34; &amp;#34;log&amp;#34; &amp;#34;net&amp;#34; &amp;#34;net/http&amp;#34; &amp;#34;time&amp;#34; ) func main() { var ( dnsResolverIP = &amp;#34;8.8.8.8:53&amp;#34; // Google DNS resolver. dnsResolverProto = &amp;#34;udp&amp;#34; // Protocol to use for the DNS resolver dnsResolverTimeoutMs = 5000 // Timeout (ms) for the DNS resolver (optional) ) dialer := &amp;amp;net.Dialer{ Resolver: &amp;amp;net.Resolver{ PreferGo: true, Dial: func(ctx context.Context, network, address string) (net.Conn, error) { d := net.Dialer{ Timeout: time.Duration(dnsResolverTimeoutMs) * time.</description>
    </item>
    
  </channel>
</rss>
