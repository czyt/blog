<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on 虫子樱桃</title>
    <link>https://czyt.tech/tags/golang/</link>
    <description>Recent content in golang on 虫子樱桃</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 28 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://czyt.tech/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Project 1</title>
      <link>https://czyt.tech/project/project1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://czyt.tech/project/project1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>grpc-golang windows环境搭建说明</title>
      <link>https://czyt.tech/post/grpc-golang-setup-in-windows/</link>
      <pubDate>Mon, 28 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://czyt.tech/post/grpc-golang-setup-in-windows/</guid>
      <description>下载protoc，打开链接 下载后将对应的文件解压到gopath的bin目录。 下载protoc的golang插件。下载地址 链接 下载后放在protoc的同级目录（需要改扩展名为exe） 测试，定义一个Proto  syntax = &amp;#34;proto3&amp;#34;;option go_package = &amp;#34;.;hello&amp;#34;;package main; message String { string value = 1;}然后执行命令 protoc hello.proto --go_out=. ,大功告成，生成的文件内容如下：
// Code generated by protoc-gen-go. DO NOT EDIT. // versions: // protoc-gen-go v1.24.0-devel // protoc v3.12.3 // source: hello.proto  package hello import ( proto &amp;#34;github.com/golang/protobuf/proto&amp;#34; protoreflect &amp;#34;google.golang.org/protobuf/reflect/protoreflect&amp;#34; protoimpl &amp;#34;google.golang.org/protobuf/runtime/protoimpl&amp;#34; reflect &amp;#34;reflect&amp;#34; sync &amp;#34;sync&amp;#34; ) const ( // Verify that this generated code is sufficiently up-to-date.</description>
    </item>
    
  </channel>
</rss>
