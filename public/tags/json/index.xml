<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>json on 虫子樱桃</title>
    <link>https://czyt.tech/tags/json/</link>
    <description>Recent content in json on 虫子樱桃</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 06 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://czyt.tech/tags/json/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>.NET6 从JSON获取配置</title>
      <link>https://czyt.tech/post/dotnet6-load-config-from-json/</link>
      <pubDate>Tue, 06 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://czyt.tech/post/dotnet6-load-config-from-json/</guid>
      <description>环境准备 nuget包 Microsoft.Extensions.Configuration Microsoft.Extensions.Configuration.Binder Microsoft.Extensions.Configuration.Json (当需要从Json文件添加记录时，安装此nuget包) Microsoft.Extensions.Configuration.EnvironmentVariables (当需要从环境变量添加记录时，安装此nuget包) C#开发环境 visual studio 2019 + visual Code 示例代码 // See https://aka.ms/new-console-template for more information using Microsoft.Extensions.Configuration; using Microsoft.Extensions.Configuration.Json; Console.WriteLine(&amp;#34;Hello, World!&amp;#34;); ConfigurationBuilder configurationBuilder = new ConfigurationBuilder(); IConfiguration c = configurationBuilder.AddJsonFile(&amp;#34;appsettings.json&amp;#34;).AddEnvironmentVariables().Build(); var k = c.GetRequiredSection(&amp;#34;Settings&amp;#34;).Get&amp;lt;Settings&amp;gt;().KeyOne; var n = 1; public class NestedSettings { public string Message { get; set; } = null!; } public class Settings { public int KeyOne { get; set; } public bool KeyTwo { get; set; } public NestedSettings KeyThree { get; set; } = null!</description>
    </item>
    
  </channel>
</rss>
