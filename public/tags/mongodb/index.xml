<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>mongoDB on 虫子樱桃</title>
    <link>https://czyt.tech/tags/mongodb/</link>
    <description>Recent content in mongoDB on 虫子樱桃</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 30 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://czyt.tech/tags/mongodb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在Alibaba Cloud Linux上安装MongoDB</title>
      <link>https://czyt.tech/post/install-mongodb-on-alibaba-cloud-linux/</link>
      <pubDate>Tue, 30 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://czyt.tech/post/install-mongodb-on-alibaba-cloud-linux/</guid>
      <description>安装步骤 查询系统版本 执行命令lsb_release -a返回下面的内容
LSB Version:	:core-4.1-amd64:core-4.1-noarchDistributor ID:	AlibabaCloudDescription:	Alibaba Cloud Linux release 3 (Soaring Falcon) Release:	3Codename:	SoaringFalcon 添加yum源 创建repo文件etc/yum.repos.d/mongodb.repo并输入下面的内容，这里安装的mongodb版本为6.0,其他版本请参考官网（配置偶数版本，奇数版不适合生产使用）。
官网的配置文件如下：
[mongodb-org-6.0] name=MongoDB Repository baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/6.0/x86_64/ gpgcheck=1 enabled=1 gpgkey=https://www.mongodb.org/static/pgp/server-6.0.asc 使用这个配置文件是安装不了的，需要修改$releasever为相应的版本，Alibaba Cloud Linux 3修改为8 （设置一个releasever的环境变量也许也可以，没有验证。）即可。即下面的样子
[mongodb-org-6.0] name=MongoDB Repository baseurl=https://repo.mongodb.org/yum/redhat/8/mongodb-org/6.0/x86_64/ gpgcheck=1 enabled=1 gpgkey=https://www.mongodb.org/static/pgp/server-6.0.asc 使用命令 yum -y install mongodb-org 安装即可。另外阿里云也提供了国内的镜像源，上面的配置文件可以修改为下面的内容，也是等效的。
[mongodb-org-6.0] name=MongoDB Repository baseurl=http://mirrors.aliyun.com/mongodb/yum/redhat/8/mongodb-org/6.0/x86_64/ gpgcheck=1 enabled=1 gpgkey=https://www.mongodb.org/static/pgp/server-6.0.asc 参考链接 如何在Alibaba Cloud Linux 3上安装MongoDB 5.0 </description>
    </item>
    
    <item>
      <title>Golang MongoDB ODM mgm使用</title>
      <link>https://czyt.tech/post/golang-mongodb-mgm-odm-usage/</link>
      <pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://czyt.tech/post/golang-mongodb-mgm-odm-usage/</guid>
      <description>(本文大部分内容根据官方文档翻译而来)
环境准备 golang 1.10+ mongodb mgm 模型定义 定义 定义模型
type Book struct { // DefaultModel adds _id, created_at and updated_at fields to the Model mgm.DefaultModel `bson:&amp;#34;,inline&amp;#34;` Name string `json:&amp;#34;name&amp;#34; bson:&amp;#34;name&amp;#34;` Pages int `json:&amp;#34;pages&amp;#34; bson:&amp;#34;pages&amp;#34;` } func NewBook(name string, pages int) *Book { return &amp;amp;Book{ Name: name, Pages: pages, } } mgm 在创建表时会自动检测Model生成的Collection名称
book:=Book{} // Print your model collection name. collName := mgm.CollName(&amp;amp;book) fmt.Println(collName) // 打印: books 如果要自定义生成Collection的名称。需要实现CollectionNameGetter接口。
func (model *Book) CollectionName() string { return &amp;#34;my_books&amp;#34; } // mgm return &amp;#34;my_books&amp;#34; collection coll:=mgm.</description>
    </item>
    
    <item>
      <title>MongoDB操作指北</title>
      <link>https://czyt.tech/post/operate-mongodb-tutorial/</link>
      <pubDate>Thu, 26 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://czyt.tech/post/operate-mongodb-tutorial/</guid>
      <description>TL;DR
环境准备 mongoDB 预备知识 MongoDB常见的数据类型
数据类型 示例 说明 Null {&amp;quot;x&amp;quot; : null} Boolean {&amp;quot;x&amp;quot; : true} Number {&amp;quot;x&amp;quot; : 3.14} {&amp;quot;x&amp;quot; : 3} {&amp;quot;x&amp;quot; : NumberInt(&amp;quot;3&amp;quot;)} {&amp;quot;x&amp;quot; : NumberLong(&amp;quot;3&amp;quot;)} 默认64位浮点数，整数需要使用NumberInt和NumberLong String {&amp;quot;x&amp;quot; : &amp;quot;foobar&amp;quot;} 编码格式为UTF-8 Date {&amp;quot;x&amp;quot; : new Date()} 64位时间戳(从January 1, 1970)，不存时区。通过new Date()进行调用。 Regular expression {&amp;quot;x&amp;quot; : /foobar/i} javascript 正则 Array {&amp;quot;x&amp;quot; : [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;]} Embedded document {&amp;quot;x&amp;quot; : {&amp;quot;foo&amp;quot; : &amp;quot;bar&amp;quot;}} Object ID {&amp;quot;x&amp;quot; : ObjectId()} 文档12字节的ID Binary data 一个任意字节的字符串。是保存非UTF-8字符串到数据库的唯一方法。 Code {&amp;quot;x&amp;quot; : function() { /* .</description>
    </item>
    
  </channel>
</rss>
