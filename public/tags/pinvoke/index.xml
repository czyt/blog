<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Pinvoke on 虫子樱桃</title>
    <link>https://czyt.tech/tags/pinvoke/</link>
    <description>Recent content in Pinvoke on 虫子樱桃</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 09 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://czyt.tech/tags/pinvoke/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C# dllimport 备忘录</title>
      <link>https://czyt.tech/post/csharp-dll-import-memo/</link>
      <pubDate>Sun, 09 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://czyt.tech/post/csharp-dll-import-memo/</guid>
      <description>dllImport的入口点问题 通过Dependencies查询Dll对应方法的EntryPoint
然后在dllimport的attribute中显式申明EntryPoint
[DllImport(&amp;#34;demo.dll&amp;#34;, SetLastError = true,EntryPoint =&amp;#34;??0DemoManager@EcgParser@Gfeit@@AEAA@XZ&amp;#34;)] public static extern IntPtr DemoManager(); 导入类方法的问题 最好的方式还是使用C++构造wrapper，然后通过windowsApi的方式调用Pinvoke
参考链接 swig nuget
swig
C++/C# interoperability
Working with C++ Interface Classes from C#
Call function in unmanaged DLL from C# and pass custom data types [Marshal]
SWIG and C#
Example for SWIG to wrap C++ library in .Net 6</description>
    </item>
    
  </channel>
</rss>
