<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>regexp on 虫子樱桃</title>
    <link>https://czyt.tech/tags/regexp/</link>
    <description>Recent content in regexp on 虫子樱桃</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 17 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://czyt.tech/tags/regexp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>golang正则校验支付宝微信支付授权码</title>
      <link>https://czyt.tech/post/golang-check-wechat-alipay-authcode-via-regxp/</link>
      <pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://czyt.tech/post/golang-check-wechat-alipay-authcode-via-regxp/</guid>
      <description>参考sdk定义
package main import ( &amp;#34;fmt&amp;#34; &amp;#34;regexp&amp;#34; ) // wechat pay 用户付款码条形码规则：18位纯数字，以10、11、12、13、14、15开头 // alipay 支付授权码，25~30开头的长度为16~24位的数字，实际字符串长度以开发者获取的付款码长度为准 func main() { // wechat regwechat:=regexp.MustCompile(&amp;#34;^(1[0-5])\\d{16}$&amp;#34;) matchwechat := regwechat.MatchString(&amp;#34;154658833119096245&amp;#34;) fmt.Println(matchwechat) // alipay regalipay:=regexp.MustCompile(&amp;#34;^(2[5-9]|30)\\d{14,22}$&amp;#34;) matchalipay := regalipay.MatchString(&amp;#34;307573774583867517336&amp;#34;) fmt.Println(matchalipay) } 参考
微信
支付宝</description>
    </item>
    
  </channel>
</rss>
