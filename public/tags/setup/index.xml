<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>setup on 虫子樱桃</title>
    <link>https://czyt.tech/tags/setup/</link>
    <description>Recent content in setup on 虫子樱桃</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 28 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://czyt.tech/tags/setup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>grpc-golang windows环境搭建说明</title>
      <link>https://czyt.tech/post/grpc-golang-setup-in-windows/</link>
      <pubDate>Mon, 28 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://czyt.tech/post/grpc-golang-setup-in-windows/</guid>
      <description>下载protoc，打开链接 下载后将对应的文件解压到gopath的bin目录。 下载protoc的golang插件。下载地址 链接 下载后放在protoc的同级目录（需要改扩展名为exe） 测试，定义一个Proto  syntax = &amp;#34;proto3&amp;#34;;option go_package = &amp;#34;.;hello&amp;#34;;package main; message String { string value = 1;}然后执行命令 protoc hello.proto --go_out=. ,大功告成，生成的文件内容如下：
// Code generated by protoc-gen-go. DO NOT EDIT. // versions: // protoc-gen-go v1.24.0-devel // protoc v3.12.3 // source: hello.proto  package hello import ( proto &amp;#34;github.com/golang/protobuf/proto&amp;#34; protoreflect &amp;#34;google.golang.org/protobuf/reflect/protoreflect&amp;#34; protoimpl &amp;#34;google.golang.org/protobuf/runtime/protoimpl&amp;#34; reflect &amp;#34;reflect&amp;#34; sync &amp;#34;sync&amp;#34; ) const ( // Verify that this generated code is sufficiently up-to-date.</description>
    </item>
    
    <item>
      <title>Rust安装及配置</title>
      <link>https://czyt.tech/post/rust-setup-and-config/</link>
      <pubDate>Mon, 28 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://czyt.tech/post/rust-setup-and-config/</guid>
      <description>下载rustup 从此处下载
设置rustup镜像 字节提供的镜像 https://rsproxy.cn
export RUSTUP_DIST_SERVER=&amp;#34;https://rsproxy.cn&amp;#34; export RUSTUP_UPDATE_ROOT=&amp;#34;https://rsproxy.cn/rustup&amp;#34; 设置两个环境变量即可 设置环境变量 RUSTUP_DIST_SERVER (用于更新 toolchain)
export RUSTUP_DIST_SERVER=https://mirrors.ustc.edu.cn/rust-static 以及 RUSTUP_UPDATE_ROOT (用于更新 rustup)
export RUSTUP_UPDATE_ROOT=https://mirrors.ustc.edu.cn/rust-static/rustup crates.io 镜像 编辑 ~/.cargo/config 
[source.crates-io]replace-with = &#39;rsproxy&#39;[source.rsproxy]registry = &amp;quot;https://rsproxy.cn/crates.io-index&amp;quot;[registries.rsproxy]index = &amp;quot;https://rsproxy.cn/crates.io-index&amp;quot;[net]git-fetch-with-cli = true 安装Rust 安装rust即可。可以参考我的步骤
Current installation options: default host triple: x86_64-pc-windows-msvc default toolchain: stable (default) profile: default modify PATH variable: yes 1) Proceed with installation (default) 2) Customize installation 3) Cancel installation &amp;gt;2 I&amp;#39;m going to ask you the value of each of these installation options.</description>
    </item>
    
  </channel>
</rss>
