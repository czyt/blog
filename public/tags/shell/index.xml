<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>shell on 虫子樱桃</title>
    <link>https://czyt.tech/tags/shell/</link>
    <description>Recent content in shell on 虫子樱桃</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 31 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://czyt.tech/tags/shell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>浅谈windows默认Shell的替换</title>
      <link>https://czyt.tech/post/a-brief-talk-about-replace-windows-default-shell-with-wpf/</link>
      <pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://czyt.tech/post/a-brief-talk-about-replace-windows-default-shell-with-wpf/</guid>
      <description>Windows XP时代 Xp时代提供的是通过注册表来自定义shell
设置所有用户的shell 注册表键HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Shell
设置当前用户的shell注册表键 HKEY_Current_User\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Shell
注册表键值类型 REG_SZ
值修改为你要自定义为shell的程序的完整路径。
在windows10下使用该技巧可能会出现黑屏的现象，参考stackoverflow的回答
Simply replacing the &amp;ldquo;explorer.exe&amp;rdquo; (HKLM\SOFTWARE\Microsoft\Window NT\Winlogon\Shell) with a custom app location provided a black screen.
A much simpler way, and it works great, was to create a BATCH script to call the custom app through elevated powershell&amp;hellip;
powershell -nologo -noprofile -executionpolicy bypass -command &amp;#34;start-process -verb &amp;#39;runas&amp;#39; -filepath &amp;lt;full path of custom app executable&amp;gt;&amp;#34; By replacing &amp;ldquo;explorer.exe&amp;rdquo; with this batch script I was able to successfully create a kiosk style lockdown under Windows 10 PRO with a non-UWP app.</description>
    </item>
    
  </channel>
</rss>
